group 'com.via'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'eclipse'
apply plugin: 'idea'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

def grpcVersion = '1.0.0' // CURRENT_GRPC_VERSION

dependencies {
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
//    compile "org.springframework.boot:spring-boot-starter-actuator"
//    compile 'org.springframework.boot:spring-boot-starter-web'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/protoGen'
        }
    }
}
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java {
                    outputSubDir = 'protoGen'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'protoGen'
                }
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}

// Inform IntelliJ projects about the generated code.

//
//idea {
//    module {
//        // Not using generatedSourceDirs because of
//        // https://discuss.gradle.org/t/support-for-intellij-2016/15294/8
//        sourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
//        sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
//        //generatedSourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
//        //generatedSourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
//
//    }
//}

// Provide convenience executables for trying out the examples.
apply plugin: 'application'

startScripts.enabled = false

task cleanProtoGen {
    doFirst {
        delete("$projectDir/src/main/protoGen")
    }
}
clean.dependsOn cleanProtoGen




